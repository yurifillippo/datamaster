version: '3.9'

services:
  solicitation_token:
    build:
      context: ./api_solicitation
    ports:
      - "5001:5001"
    depends_on:
      - generate_token1
      - generate_token2
      - postgres
    command: python solicitation_data_client.py
    networks:
      - mycustomnetwork
    deploy:
      mode: global
      restart_policy:
        condition: always

  generate_token1:
    build:
      context: ./generate_token
    ports:
      - "5002:5002"
    environment:
      - PORT=5002
      - FLASK_DEBUG=0
    command: python generate_token_app.py
    deploy:
      mode: global
      restart_policy:
        condition: always
    networks:
      - mycustomnetwork

  generate_token2:
    build:
      context: ./generate_token
    ports:
      - "5003:5003"
    environment:
      - PORT=5003
      - FLASK_DEBUG=0
    command: python generate_token_app.py
    deploy:
      mode: global
      restart_policy:
        condition: always
    networks:
      - mycustomnetwork

  nginx:
    image: nginx:latest
    ports:
      - "5004:5004"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - generate_token1
      - generate_token2
    deploy:
      mode: global
      restart_policy:
        condition: always
    networks:
      - mycustomnetwork

  postgres:
    build:
      context: ./postgres
    environment:
      POSTGRES_DB: "request_manager_product"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "11930143605"
    ports:
      - "5432:5432"
    deploy:
      mode: global
      restart_policy:
        condition: always
    networks:
      - mycustomnetwork

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - mycustomnetwork

  kafka:
    image: apache/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - mycustomnetwork
    volumes:
      - kafka-data:/var/lib/kafka/data

  kafka-init:
    image: apache/kafka:latest
    depends_on:
      - kafka
    command: >
      sh -c "
        until nc -z kafka 9092; do
          echo 'Waiting for Kafka...';
          sleep 2;
        done;
        /opt/kafka/bin/kafka-topics.sh --create --topic solicitationtopic --bootstrap-server kafka:9092 --replication-factor 1 --partitions 1;
      "
    networks:
      - mycustomnetwork

volumes:
  kafka-data:
    driver: local
  zookeeper-data:
    driver: local

networks:
  mycustomnetwork:
    driver: bridge